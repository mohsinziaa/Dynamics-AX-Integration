@page
@model IndexModel
@{
    ViewData["Title"] = "SO - Integration";
}

<style>
    .table td {
        vertical-align: middle;
    }

        .table td:first-child, .table th:first-child {
            white-space: nowrap;
        }

    .table th {
        background-color: #007bff;
        color: white;
        font-size: 1.2rem;
        font-weight: 400;
    }

        .table th:first-child {
            border-top-left-radius: 10px;
        }

        .table th:last-child {
            border-top-right-radius: 10px;
        }

    .search-container {
        margin-bottom: 15px;
        text-align: left;
    }

        .search-container .form-control {
            width: 300px;
            margin-right: 10px;
        }

        .search-container .btn {
            margin-top: 0;
        }
</style>

<div class="search-container d-flex justify-content-end align-items-center">
    <input type="text" id="itemSearch" class="form-control" placeholder="Search by Item Name" autocomplete="off">
    <button id="searchButton" class="btn btn-primary">Search</button>
</div>

<table id="itemList" class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">
                <input type="checkbox" id="selectAll" class="form-check-input">
            </th>
            <th scope="col">Item Number</th>
            <th scope="col">Item Name</th>
            <th scope="col">Site</th>
            <th scope="col">Warehouse</th>
            <th scope="col">Location</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ItemsList)
        {
            <tr>
                <td>
                    <input type="checkbox" class="form-check-input record-checkbox">
                </td>
                <td>@item.itemNumber</td>
                <td>@item.itemName</td>
                <td>
                    <select class="form-select site-dropdown">
                        <option>MATCO01</option>
                    </select>
                </td>
                <td>
                    <select class="form-select warehouse-dropdown">
                        <option value="Dock-01">Dock-01</option>
                    </select>
                </td>
                <td>
                    <select class="form-select location-dropdown">
                        <option value="00001">00001</option>
                    </select>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-end mt-5">
    <button type="submit" class="btn btn-primary w-auto" id="generateSObtn">Generate Sales Order</button>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        // Fetch sites and populate site dropdown
        $.ajax({
            url: "/Index?handler=FetchSites",
            type: "GET",
            success: function (response) {
                let siteDropdowns = $("select.site-dropdown");
                siteDropdowns.empty();

                response.forEach(site => {
                    siteDropdowns.append(`<option value="${site}">${site}</option>`);
                });

                let selectedSite = siteDropdowns.val();
                if (selectedSite) {
                    updateWarehouses(selectedSite, siteDropdowns);
                }
            },
            error: function () {
                alert("Error fetching sites");
            },
        });

        // Event listener for site selection change
        $("select.site-dropdown").on('change', function () {
            updateWarehouses($(this).val(), $(this));
        });

        // Function to update warehouses based on selected site
        function updateWarehouses(siteName, siteDropdown) {
            if (!siteName) return;

            $.ajax({
                url: "/Index?handler=FetchWarehouses",
                type: "GET",
                data: { siteName: siteName },
                success: function (response) {
                    let row = siteDropdown.closest('tr');
                    let warehouseDropdown = row.find("select.warehouse-dropdown");

                    warehouseDropdown.empty();
                    response.forEach(function (warehouse) {
                        warehouseDropdown.append(`<option value="${warehouse}">${warehouse}</option>`);
                    });

                    if (response.length > 0) {
                        warehouseDropdown.val(response[0]);
                        updateLocations(response[0], row);
                    }
                },
                error: function () {
                    alert("Error fetching warehouses");
                }
            });
        }

        // Event listener for warehouse selection change
        $("select.warehouse-dropdown").on('change', function () {
            updateLocations($(this).val(), $(this));
        });

        // Function to update locations based on selected warehouse
        function updateLocations(warehouseName, warehouseDropdown) {
            if (!warehouseName) return;

            let row = warehouseDropdown.closest('tr');
            let siteName = row.find("select.site-dropdown").val();

            $.ajax({
                url: "/Index?handler=FetchLocations",
                type: "GET",
                data: { warehouseName: warehouseName, siteName: siteName },
                success: function (response) {
                    let locationDropdown = row.find("select.location-dropdown");

                    locationDropdown.empty();
                    response.forEach(function (location) {
                        locationDropdown.append(`<option value="${location}">${location}</option>`);
                    });

                    if (response.length > 0) {
                        locationDropdown.val(response[0]);
                    }
                },
                error: function () {
                    alert("Error fetching locations");
                }
            });
        }

        // Trigger search on pressing Enter
        $("#itemSearch").on("keypress", function (e) {
            if (e.which === 13) {
                e.preventDefault();
                $("#searchButton").click();
            }
        });

        // Search functionality
        $("#searchButton").on("click", function () {
            let searchQuery = $("#itemSearch").val().toLowerCase();
            if (!searchQuery) {
                $("#generateSObtn").show();
                $("#itemList tr").show();
                $("#noRecordsMessage").remove();
                return;
            }

            let foundMatch = false;
            $("#generateSObtn").hide();

            $("#itemList tbody tr").each(function () {

                let itemName = $(this).find("td:eq(2)").text().toLowerCase();

                if (itemName.includes(searchQuery)) {
                    $(this).show();
                    foundMatch = true;
                } else {
                    $(this).hide();
                }
            });

            if (!foundMatch) {
                if ($("#noRecordsMessage").length === 0) {
                    const messageRow = `<tr id="noRecordsMessage">
                                            <td colspan="5" class="text-center text-danger">No records found</td>
                                          </tr>`;
                    $("#itemList tbody").append(messageRow);
                }
            } else {
                $("#noRecordsMessage").remove();
            }
        });

        // Select all checkboxes when the header checkbox is clicked
        $("#selectAll").on("click", function () {
            $(".record-checkbox").prop("checked", $(this).prop("checked"));

        });

        // Uncheck "Select All" if any individual checkbox is unchecked
        $(document).on("click", ".record-checkbox", function () {
            if (!$(this).prop("checked")) {
                $("#selectAll").prop("checked", false);
            } else if ($(".record-checkbox:checked").length === $(".record-checkbox").length) {
                $("#selectAll").prop("checked", true);
            }
        });

        $("#generateSObtn").on("click", function () {
            // console.log("SO button clicked");

                let selectedItems = [];

            $("#itemList tbody tr").each(function () {
                let checkbox = $(this).find(".record-checkbox");

                if (checkbox.prop("checked")) {
                    let itemData = {
                        itemNumber: $(this).find("td:eq(1)").text().trim(),
                        itemName: $(this).find("td:eq(2)").text().trim(),
                        site: $(this).find("select.site-dropdown").val(),
                        warehouse: $(this).find("select.warehouse-dropdown").val(),
                        location: $(this).find("select.location-dropdown").val()
                    };
                    selectedItems.push(itemData);
                }
            });

        console.log("Selected Items:", selectedItems);
        });

    });
</script>
